//object
let user1={
        name:'Nelson',
        age:22,
        login(){
          console.log('You are logged ' +this.name)
        },
        logout(){
            console.log("You are logged out "+this.name)
        }}
let user2={
        name:'Ramya',
        age:24,
        login(){
        console.log("You are logged in "+this.name)
        },
        logout(){
        console.log("You are logged out "+this.name)
        }}
let user3={
        name:'Ravi',
        age:21,
        login(){
        console.log("You are logged in  "+this.name)
        },
        logout(){
        console.log("You are logged out "+this.name)
        }}


            user1.login();
            user1.logout();
            user2.login();         
            user2.logout();
            user3.login();
            user3.logout();

//class
class User{

constructor(name, age){
this.name=name;
this.age=age;
}
login(){
    console.log('you are logged in '+this.name, 'Your age is '+this.age)
}
logout(){
  console.log('you are logged out')
}
}
let userOne = new User('Nelson',27);
let userTwo = new User('Arun',22)
userOne.login();
userOne.logout();
userTwo.login();
userTwo.logout();

//Static variables and static methods
class User{
static numberOfUsers =0;  
constructor(name, age){
this.name=name;
this.age=age;
User.numberOfUsers++;
}
login(){
    console.log('you are logged in '+this.name, 'Your age is '+this.age)
}
logout(){
  console.log('you are logged out')
}

static displayTotalUsers(){
    console.log('Number of Users '+User.numberOfUsers)
}
let userOne = new User('Nelson',27);
let userTwo = new User('Arun',22);
let userThree = new User('Praveen',21);
let userFour = new User('Raj',23);

console.log('Number of Users '+User.numberOfUsers)
User.displayTotalUsers();

//Inheritance
class PaidUser extends User{
  constructor(name, age){
  super(name, age)  
  }
message(){
  console.log('you have a free 100 GB storage') 
}
}
let paidUser1 = new PaidUser('Ramesh',30)
paidUser1.login()
paidUser1.message()

//overriding
class PaidUser extends User{
  constructor(name, age){
  super(name, age)  
  }
message(){
  console.log('you have a free 100 GB storage') 
}
login(){
    console.log('Thank you')
}
let paidUser1 = new PaidUser('Ramesh',30)
paidUser1.login()
paidUser1.message()


class PaidUser extends User{
  constructor(name, age){
  super(name, age)  
  }
message(){
  console.log('you have a free 100 GB storage') 
}
login(){
    console.log('Thank you')
    return.this
}
let paidUser1 = new PaidUser('Ramesh',30)
paidUser1.login()
paidUser1.message()
//method chaining
paidUser1.login().message()

//prototype
function User(name,age){
       this.name=name;
       this.age=age;
       }

User.prototype.login= function(){
console.log('hi',this.name)
console.log('You are logged in')
}
let user1 = new User('Rahim',34)
user1.login();

//get and set

class Temperature{
constructor(temp){
  this._temp=temp;
}
  get temp(){
  return `${this._temp} deg celcius`

  }
  set temp(temp){
    if(temp>100)
     temp=120
    this._temp=temp
  }

}
  let temp1 = new Temperature(25)
  temp1.temp=150
  console.log(temp1.temp)


//script.js

import C,{fillGas as fill,repair} from './car.js'

let car1 = new C()
car1.drive()
fill()

//car.js

//ES6 - modules
export default class Car{
    drive(){
        console.log("Driving")
    }
}

export function fillGas(){
    console.log('Filling Gas')
}

export function repair(){
    console.log('Repairing')
}

// export default Car
// export {fillGas,repair}

or

//script.js

import C,{fillGas as fill,repair} from './car.js'

let car1 = new C()
car1.drive()
fill()

//car.js

//ES6 - modules
class Car{
    drive(){
        console.log("Driving")
    }
}

function fillGas(){
    console.log('Filling Gas')
}

function repair(){
    console.log('Repairing')
}

 export default Car
 export {fillGas,repair}
